#!/bin/bash

## daily launched script to incremental backups with rdup

# variables

R="rdup"
TSF="/media/backup/full/.ts"
FLF="/media/backup/full/.fs"
TSI="/media/backup/incr/.ts"
FLI="/media/backup/incr/.fs"
TODAY=$(date +%F)
S1="/home/eye"
S2="/media/exthome"
DEST="/media/backup"
FDIR="$DEST/full"
MDIR="$DEST/monthly"
TDIR="${DEST}/incr/${TODAY}"
H=`hostname`
UDIR="/home/eye/.bak_${H}"
EX="/home/eye/bin/backup/.excludelist"


# run

# first remove old incremental backups (14 days old)

OLDBAKS=`find /media/backup/incr -maxdepth 1 -type d -mtime +14`
if [ ${#OLDBAKS} != 0 ]; then
	for DIR in $OLDBAKS; do
		rm -rf $DIR;
	done;
fi
#debugging purpose
#cp -p $FLI /media/backup/incr/files_$TODAY
#cp -p $TSI /media/backup/incr/timestamp_$TODAY
# for modified incremental
$R -N $TSI $FLI -E $EX $S1 $S2 | rdup-up -t $TDIR
# dump full backup
rm -f $TSF
$R -N $TSF $FLF -E $EX $S1 $S2 | rdup-up $FDIR

#create packagelist
comm -23 <(/usr/bin/pacman -Qeq|sort) <(pacman -Qmq|sort) > $TDIR/.pkglist

## script to create a tar archive of the existing full backup (only monthly)

#first test if last backup is older than 30 days
if [[ -n `find $MDIR -type f -name "*.lzo" -mtime -30` ]]
	then 
		exit 0 
fi

## remove old montly backups

OLDBAKS=`find /media/backup/monthly -type f -mtime +180`
if [ ${#OLDBAKS} != 0 ]; then
	for DIR in $OLDBAKS; do
		rm -rf $DIR;
	done;
fi


G="gpg --default-recipient-self"
FN="${MDIR}/full_${TODAY}_${H}.tar.lzo"
tar -cpf - $FDIR  | lzop -9 -o $FN

## get filename in ubuntuone folder and replace it
UUFL=$(ls $UDIR/${TODAY:0:2}*bak)
NFL=`echo $FN | sed 's/.*\/\(.*$\)/\1/'`
[[ -f $UUFL ]] || exit 0

if [ $(stat -c "%Y" $UUFL) -lt $(stat -c "%Y" $FN) ];then
	        rm $UUFL;
		$G -o $UDIR/${NFL:0:-8}.bak -e $FN
		fi
